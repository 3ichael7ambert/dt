<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// README!!!
///
/// There are a couple of different ways to do layers with
/// this terrain engine. One simple way is to create a background
/// that includes the layers in the image.
///
/// The other example demonstrated here is to create multiple
/// terrain objects that span a given area in the room. This gives
/// you more flexibility but adds complexity as you must record
/// collisions and draw each terrain layer rather than working with
/// a single "global" terrain object.
///
/// I may add multiple images for a single terrain object into the
/// API, but as it stands that is not possible.
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the terrain

var scale = 16;
w = 320;
h = 160;

global.terrain_dirt = terrain_create_ext((room_width-w)&gt;&gt;1,0,w/scale,h/scale,scale);
global.terrain_stone = terrain_create_ext((room_width-w)&gt;&gt;1,h,w/scale,h/scale,scale);
terrain_image_set_background(global.terrain_dirt,bgDirt);
terrain_image_set_background(global.terrain_stone,bgStone);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw holes and paint terrain
var holesize = 32;
if(mouse_check_button(mb_left))
{
    terrain_make_hole(global.terrain_dirt, mouse_x,mouse_y,holesize,false);
    terrain_make_hole(global.terrain_stone, mouse_x,mouse_y,holesize,false);
}
if( mouse_check_button(mb_right))
{
    terrain_make_hole(global.terrain_dirt, mouse_x,mouse_y,holesize,true);
    terrain_make_hole(global.terrain_stone, mouse_x,mouse_y,holesize,true)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the terrain

var dirt = global.terrain_dirt;
var stone = global.terrain_stone;

terrain_draw(dirt);
terrain_draw(stone);

var x1 = dirt.x;
var y1 = dirt.y;
var x2 = x1 + terrain_get_width(dirt);
var y2 = y1 + terrain_get_height(dirt) + terrain_get_height(stone);

draw_set_color(c_black);
draw_rectangle(x1,y1,x2,y2,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
