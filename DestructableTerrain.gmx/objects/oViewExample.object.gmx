<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// README!!!
///
/// This example demonstrates the use of a smaller surface
/// to draw a large area of terrain. 
///
/// To speed up the drawing of terrain, the terrain is drawn
/// to a surface only when the terrain is updated. If you are
/// creating a large area of terrain, the surface size may exceed
/// reasonable proportions. To circumvent this issue, you can
/// set the terrain redraw region using the following two scripts;
///
/// terrain_set_visible_region(terrain, x1,y1,x2,y2);
/// terrain_set_visible_view(terrain, view);
///
/// If the view is moving, remember to update the visible region
/// otherwise you will have areas of terrain that are visible on
/// screen, but will not be redrawn.
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the terrain

global.terrain = terrain_create(32);
terrain_set_visible_view(global.terrain,0);

// Half of the map is ground
for(var i = 0; i &lt;= global.terrain.width; i+=1)
for(var j = 0; j &lt;= global.terrain.height; j+=1)
{
    var k = global.terrain.grid_index[i,j];
    global.terrain.density[k] = j &gt; global.terrain.height*.5;
}
terrain_update_region(global.terrain, 0,0, global.terrain.width, global.terrain.height);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw holes and paint terrain
var holesize = 32;
if(mouse_check_button(mb_left))
terrain_make_hole(global.terrain, mouse_x,mouse_y,holesize,false)
if( mouse_check_button(mb_right))
terrain_make_hole(global.terrain, mouse_x,mouse_y,holesize,true)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move the view

var border = 32;
var sp = 6;

var v = 0;
var vx = view_xview[v];
var vy = view_yview[v];
var vw = view_wview[v];
var vh = view_hview[v];
var left = vx + border;
var top = vy + border;
var right = vx + vw - border;
var bottom = vy + vh - border;

// Change the new position if the mouse is
// near the edge of the screen
if (mouse_x &lt; left) vx -= sp; else
if (mouse_x &gt; right) vx += sp;
if (mouse_y &lt; top) vy -= sp; else
if (mouse_y &gt; bottom) vy += sp;

// Constrain the view to the room
if (vx &lt; 0) vx = 0; else
if (vx &gt; room_width - vw) vx = room_width - vw;
if (vy &lt; 0) vy = 0; else
if (vy &gt; room_height - vh) vy = room_height - vh;

// Move the view
view_xview[v] = vx;
view_yview[v] = vy;

// Update the viewport of the terrain
// This is CRITICAL - if the viewport isn't moved
// then the outer regions of the terrain won't be drawn correctly
terrain_set_visible_view(global.terrain, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the instructions

draw_set_color(c_black);
draw_set_halign(fa_left);
draw_set_valign(fa_top);

var v = 0;
draw_text(5,5,"View position: "+string(view_xview[v])+","+string(view_yview[v]));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the terrain

terrain_draw(global.terrain);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
